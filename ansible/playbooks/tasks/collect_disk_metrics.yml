
- name: Assume role in target account
  amazon.aws.sts_assume_role:
    role_arn: "arn:aws:iam::{{ account.account_id }}:role/{{ account.role_name }}"
    role_session_name: "disk-monitoring-{{ ansible_date_time.epoch }}"
  register: assumed_role

- name: Get EC2 instances in account
  amazon.aws.ec2_instance_info:
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    aws_security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ region }}"
    filters:
      instance-state-name: running
  register: ec2_instances
  loop: "{{ account.regions }}"
  loop_control:
    loop_var: region

- name: Execute disk utilization command via SSM
  amazon.aws.aws_ssm_send_command:
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    aws_security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ region }}"
    document_name: "AWS-RunShellScript"
    instance_ids: "{{ instance_ids }}"
    parameters:
      commands:
        - |
          df -h | grep -E '^/dev/' | awk '{
            print $6 "," $2 "," $3 "," $4 "," $5
          }' > /tmp/disk_usage.csv
          cat /tmp/disk_usage.csv
  register: ssm_command
  vars:
    instance_ids: "{{ ec2_instances.results | map(attribute='instances') | flatten | map(attribute='instance_id') | list }}"
  loop: "{{ account.regions }}"
  loop_control:
    loop_var: region

- name: Store results in S3
  amazon.aws.s3_object:
    bucket: "{{ central_bucket }}"
    object: "disk-metrics/{{ account.account_id }}/{{ ansible_date_time.date }}/{{ ansible_date_time.time }}.json"
    content: "{{ disk_metrics | to_nice_json }}"
    mode: put